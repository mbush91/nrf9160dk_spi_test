/*    nRF9160 DK GPIO interface between nRF9160 and nRF52840
*
*    This interface can be used for inter-SoC communication on the DK.
*    The connections are as follows:
*
*     | nRF9160 |                            |    nRF52840    |
* RX  |   P0.17 | -- nRF interface line 0 -- | P0.17          | TX
* TX  |   P0.18 | -- nRF interface line 1 -- | P0.20          | RX
* CTS |   P0.19 | -- nRF interface line 2 -- | P0.15          | RTS
*     |   P0.21 | -- nRF interface line 3 -- | P0.22          | DEFAULT CTS
*     |   P0.22 | -- nRF interface line 4 -- | P1.04          |
*     |   P0.23 | -- nRF interface line 5 -- | P1.02          |
*     |   COEX0 | -- nRF interface line 6 -- | P1.13          |
*     |   COEX1 | -- nRF interface line 7 -- | P1.11          |
*     |   COEX2 | -- nRF interface line 8 -- | P1.15          |
* RTS |   P0.24 | -- nRF interface line 9 -- | P0.18 (nRESET) | (in v0.14.0 or later) CTS, nRESET is configurable
*/

#include <nrf9160dk_uart1_on_if0_3.dtsi>

&pinctrl {
    spi1_default_pss: spi1_default_pss {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 17)>,
                <NRF_PSEL(SPIM_MISO, 0, 18)>,
                <NRF_PSEL(SPIM_MOSI, 0,19)>;
                // cs = P0.21
            nordic,drive-mode = <NRF_DRIVE_H0H1>;
        };
    };

    spi1_sleep_pss: spi1_sleep_pss {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 17)>,
            <NRF_PSEL(SPIM_MISO, 0, 20)>,
            <NRF_PSEL(SPIM_MOSI, 0,15)>;
            // cs = P0.21
            low-power-enable;
        };
    };

};

&uart1 {
    status = "disabled";
};

&spi1 {
    status = "okay";
    cs-gpios = <&gpio0 21 GPIO_ACTIVE_LOW>;
    pinctrl-0 = < &spi1_default_pss >;
    pinctrl-1 = < &spi1_sleep_pss >;
    compatible = "nordic,nrf-spis";
    def-char = <0x00>;
};